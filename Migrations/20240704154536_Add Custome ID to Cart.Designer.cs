// <auto-generated />
using System;
using HotelBooking2.Infrastructure;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace HotelBooking2.Migrations
{
    [DbContext(typeof(HotelBookingDbContext))]
    [Migration("20240704154536_Add Custome ID to Cart")]
    partial class AddCustomeIDtoCart
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("HotelBooking2.Models.Booking", b =>
                {
                    b.Property<Guid>("BookingID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CustomerID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("TotalPrice")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("BookingID");

                    b.HasIndex("CustomerID");

                    b.ToTable("Bookings");
                });

            modelBuilder.Entity("HotelBooking2.Models.BookingRoom", b =>
                {
                    b.Property<Guid>("BookingID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("RoomID")
                        .HasColumnType("int");

                    b.Property<Guid>("BookingRoomID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CheckInDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("CheckOutDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Pax")
                        .HasColumnType("int");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18, 2)");

                    b.HasKey("BookingID", "RoomID");

                    b.HasIndex("RoomID");

                    b.ToTable("BookingRooms");
                });

            modelBuilder.Entity("HotelBooking2.Models.Cart", b =>
                {
                    b.Property<Guid>("ItemID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CheckInDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("CheckOutDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("CustomerID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<int>("RoomID")
                        .HasColumnType("int");

                    b.HasKey("ItemID");

                    b.HasIndex("CustomerID");

                    b.HasIndex("RoomID");

                    b.ToTable("Carts");
                });

            modelBuilder.Entity("HotelBooking2.Models.Customer", b =>
                {
                    b.Property<Guid>("CustomerID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("Birthday")
                        .HasColumnType("datetime2");

                    b.Property<string>("CustomerName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CustomerID");

                    b.ToTable("Customers");
                });

            modelBuilder.Entity("HotelBooking2.Models.Room", b =>
                {
                    b.Property<int>("RoomID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("RoomID"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("Pax")
                        .HasColumnType("int");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18, 2)");

                    b.HasKey("RoomID");

                    b.ToTable("Rooms");

                    b.HasData(
                        new
                        {
                            RoomID = 1001,
                            Name = "Hibiscus",
                            Pax = 1,
                            Price = 80m
                        },
                        new
                        {
                            RoomID = 1002,
                            Name = "Orchid",
                            Pax = 2,
                            Price = 150m
                        },
                        new
                        {
                            RoomID = 1003,
                            Name = "Sunflower",
                            Pax = 3,
                            Price = 220m
                        },
                        new
                        {
                            RoomID = 1004,
                            Name = "Cactus",
                            Pax = 4,
                            Price = 300m
                        },
                        new
                        {
                            RoomID = 2001,
                            Name = "Papaya",
                            Pax = 1,
                            Price = 80m
                        },
                        new
                        {
                            RoomID = 2002,
                            Name = "Pineapple",
                            Pax = 2,
                            Price = 150m
                        },
                        new
                        {
                            RoomID = 2003,
                            Name = "City",
                            Pax = 3,
                            Price = 220m
                        },
                        new
                        {
                            RoomID = 2004,
                            Name = "Orange",
                            Pax = 4,
                            Price = 300m
                        },
                        new
                        {
                            RoomID = 3001,
                            Name = "Panda",
                            Pax = 1,
                            Price = 80m
                        },
                        new
                        {
                            RoomID = 3002,
                            Name = "Unicorn",
                            Pax = 2,
                            Price = 150m
                        },
                        new
                        {
                            RoomID = 3003,
                            Name = "Piano",
                            Pax = 3,
                            Price = 220m
                        },
                        new
                        {
                            RoomID = 3004,
                            Name = "Nature",
                            Pax = 4,
                            Price = 300m
                        });
                });

            modelBuilder.Entity("HotelBooking2.Models.Booking", b =>
                {
                    b.HasOne("HotelBooking2.Models.Customer", "Customer")
                        .WithMany("Bookings")
                        .HasForeignKey("CustomerID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Customer");
                });

            modelBuilder.Entity("HotelBooking2.Models.BookingRoom", b =>
                {
                    b.HasOne("HotelBooking2.Models.Booking", "Booking")
                        .WithMany("BookingRooms")
                        .HasForeignKey("BookingID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("HotelBooking2.Models.Room", "Room")
                        .WithMany("BookingRooms")
                        .HasForeignKey("RoomID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Booking");

                    b.Navigation("Room");
                });

            modelBuilder.Entity("HotelBooking2.Models.Cart", b =>
                {
                    b.HasOne("HotelBooking2.Models.Customer", "Customer")
                        .WithMany("Carts")
                        .HasForeignKey("CustomerID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("HotelBooking2.Models.Room", "Room")
                        .WithMany()
                        .HasForeignKey("RoomID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Customer");

                    b.Navigation("Room");
                });

            modelBuilder.Entity("HotelBooking2.Models.Booking", b =>
                {
                    b.Navigation("BookingRooms");
                });

            modelBuilder.Entity("HotelBooking2.Models.Customer", b =>
                {
                    b.Navigation("Bookings");

                    b.Navigation("Carts");
                });

            modelBuilder.Entity("HotelBooking2.Models.Room", b =>
                {
                    b.Navigation("BookingRooms");
                });
#pragma warning restore 612, 618
        }
    }
}
